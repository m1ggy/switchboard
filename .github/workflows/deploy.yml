name: Deploy Web + API to VPS (pnpm + PM2 + Caddy)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'

          # === VARIABLES ===
          APP_DIR=~/apps/turbo-app
          DOMAIN=${{ secrets.DOMAIN_NAME }}
          API_DOMAIN=api.$DOMAIN
          REPO_URL=https://github.com/${{ github.repository }}.git

          # === INSTALL NODE, PNPM, PM2 ===
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          corepack enable
          corepack prepare pnpm@latest --activate
          sudo npm install -g pm2

          # === INSTALL CADDY ===
          sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https
          curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo tee /etc/apt/keyrings/caddy.asc
          curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list
          sudo apt update
          sudo apt install -y caddy

          # === CLONE / PULL PROJECT ===
          if [ ! -d "$APP_DIR" ]; then
            git clone $REPO_URL $APP_DIR
          else
            cd $APP_DIR && git pull origin main
          fi

          # === INJECT SECRETS ===
          echo "${{ secrets.ENV_FILE }}" > $APP_DIR/packages/api/.env
          echo '${{ secrets.FIREBASE_JSON }}' > $APP_DIR/packages/api/firebase.json
          echo "${{ secrets.WEB_ENV_FILE }}" > $APP_DIR/packages/web/.env

          # === INSTALL MONOREPO ===
          cd $APP_DIR
          pnpm install

          # === BUILD FRONTEND ===
          cd $APP_DIR/packages/web
          NODE_OPTIONS="--max-old-space-size=1024" pnpm run build

          # === START FRONTEND VIA PM2 (vite preview) ===
          pm2 delete web || true
          pm2 start "pnpm run preview" --name web --cwd $APP_DIR/packages/web

          # === BUILD + START API ===
          cd $APP_DIR/packages/api
          NODE_OPTIONS="--max-old-space-size=1024" pnpm run build

          if [ -f "$APP_DIR/packages/api/dist/index.mjs" ]; then
            pm2 delete api || true
            pm2 start dist/index.mjs --name api --interpreter node
          else
            echo "❌ dist/index.mjs not found, skipping API start"
          fi

          # === CADDY CONFIG ===
          sudo tee /etc/caddy/Caddyfile > /dev/null <<EOC
          $DOMAIN {
            reverse_proxy localhost:4173
          }

          $API_DOMAIN {
            reverse_proxy localhost:3000
          }
          EOC

          sudo systemctl reload caddy
          EOF
